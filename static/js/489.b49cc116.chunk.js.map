{"version":3,"file":"static/js/489.b49cc116.chunk.js","mappings":"qKAIMA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4OAkBhBG,GAASL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,wMAqC3B,IApBkB,SAAHM,GAAoB,IAAdC,EAAMD,EAANC,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACb,EAAI,CAAAc,SACFJ,EAAOK,KAAI,SAAAC,GAAK,OACfH,EAAAA,EAAAA,KAACT,EAAI,CAAAU,UACHD,EAAAA,EAAAA,KAACP,EAAM,CAACW,GAAE,WAAAC,OAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMV,GAAWG,SAC1DE,EAAMM,SAFAN,EAAMG,GAIV,KAIf,C,uJCvDaI,EAAOtB,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uMAalBqB,EAAUvB,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uQAcvBsB,EAAaxB,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uFAOvBuB,EAAYzB,EAAAA,GAAAA,MAAY0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,sQ,iBCArC,EA/BkB,SAAHM,GAAsB,IAAhBmB,EAAQnB,EAARmB,SAOnB,OACEf,EAAAA,EAAAA,KAAA,OAAAC,UACEe,EAAAA,EAAAA,MAACN,EAAI,CAACK,SARW,SAAAE,GACnBA,EAAMC,iBACNH,EAASE,EAAME,OAAOC,MAAMC,OAC5BJ,EAAME,OAAOG,OACf,EAIiCrB,SAAA,EAC3BD,EAAAA,EAAAA,KAACa,EAAS,CACRU,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACZC,KAAK,WAEP3B,EAAAA,EAAAA,KAACW,EAAO,CAACY,KAAK,SAAQtB,UACpBD,EAAAA,EAAAA,KAACY,EAAU,CAAAX,UACTD,EAAAA,EAAAA,KAAC4B,EAAAA,IAAQ,YAMrB,E,QCOA,EA7BmB,WAAO,IAADC,EACvBC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCjC,EAAMmC,EAAA,GAAEE,EAASF,EAAA,GAClBlC,GAAWC,EAAAA,EAAAA,MACXoC,GAAaC,EAAAA,EAAAA,MACnBC,GAAkCN,EAAAA,EAAAA,WAAS,GAAMO,GAAAL,EAAAA,EAAAA,GAAAI,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBlB,EAAyD,QAApDS,EAAG,IAAIY,gBAAgB3C,EAAS4C,QAAQC,IAAI,gBAAQ,IAAAd,EAAAA,EAAI,GAgBnE,OATAe,EAAAA,EAAAA,YAAU,WACHxB,IACLoB,GAAa,IACbK,EAAAA,EAAAA,IAAiBzB,GAAO0B,MAAK,SAAAC,GAC3Bb,EAAUa,EAAKC,SACfR,GAAa,EACf,IACF,GAAG,CAACpB,KAGFJ,EAAAA,EAAAA,MAACiC,EAAAA,EAAS,CAAAhD,SAAA,EACRD,EAAAA,EAAAA,KAACkD,EAAS,CAACnC,SAfM,SAAAoC,GACnBhB,GAAUiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAItD,GAAQ,IAAE4C,OAAO,SAADrC,OAAW8C,KAC7C,IAcKZ,GAAYvC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAAiBD,EAAAA,EAAAA,KAACqD,EAAAA,EAAS,CAACxD,OAAQA,MAG1D,C,sLCnCMyD,EAAU,mCACVC,EAAW,+BAA+B,SAEjCC,EAAUC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,UAAAF,IAOxB,OAPwBA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MAAzB,SAAAC,EAA0BC,GAAG,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEJC,MAAML,GAAK,KAAD,EAAnB,OAARC,EAAQC,EAAAI,KAAAJ,EAAAE,KAAA,EACCH,EAASM,OAAO,KAAD,SAAAL,EAAAM,OAAA,SAAAN,EAAAI,MAAA,OAAAJ,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE5BQ,QAAQC,IAAGT,EAAAO,IAAQ,yBAAAP,EAAAU,OAAA,GAAAb,EAAA,mBAEtBJ,MAAA,KAAAC,UAAA,CAEO,SAAeiB,IAAoB,OAAAC,EAAAnB,MAAC,KAADC,UAAA,CAGxC,SAAAkB,IAAA,OAAAA,GAAAjB,EAAAA,EAAAA,GAAAC,IAAAA,MAHK,SAAAiB,IAAA,IAAAf,EAAA,OAAAF,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OACyD,OAAvDJ,EAAG,GAAA3D,OAAMkD,EAAQ,gCAAAlD,OAA+BiD,GAAO0B,EAAAR,OAAA,SACxDhB,EAAWQ,IAAI,wBAAAgB,EAAAJ,OAAA,GAAAG,EAAA,MACrBpB,MAAA,KAAAC,UAAA,CAGK,SAAgBqB,EAAYC,GAAA,OAAAC,EAAAxB,MAAA,KAAAC,UAAA,CAGjC,SAAAuB,IAAA,OAAAA,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAHK,SAAAsB,EAA8BC,GAAO,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAAwB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACmB,OAArDJ,EAAG,GAAA3D,OAAMkD,EAAQ,WAAAlD,OAAUgF,EAAO,aAAAhF,OAAYiD,EAAO,mBAAAgC,EAAAd,OAAA,SACvDhB,EAAWQ,IAAI,wBAAAsB,EAAAV,OAAA,GAAAQ,EAAA,MACrBzB,MAAA,KAAAC,UAAA,CAGM,SAAef,EAAgB0C,GAAA,OAAAC,EAAA7B,MAAA,KAAAC,UAAA,CAIrC,SAAA4B,IAAA,OAAAA,GAAA3B,EAAAA,EAAAA,GAAAC,IAAAA,MAJM,SAAA2B,EAAiCrE,GAAK,IAAA4C,EAAA,OAAAF,IAAAA,MAAA,SAAA4B,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OAC2B,OAAhEJ,EAAG,GAAA3D,OAAMkD,EAAQ,0BAAAlD,OAAyBiD,EAAO,WAAAjD,OAAUe,EAAK,0BAAAsE,EAAAlB,OAAA,SACjEhB,EAAWQ,IAAI,wBAAA0B,EAAAd,OAAA,GAAAa,EAAA,MAErB9B,MAAA,KAAAC,UAAA,CAGK,SAAe+B,EAAeC,GAAA,OAAAC,EAAAlC,MAAA,KAAAC,UAAA,CAGnC,SAAAiC,IAAA,OAAAA,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,MAHK,SAAAgC,EAAiCT,GAAO,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAAiC,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,OACoB,OAA7DJ,EAAG,GAAA3D,OAAMkD,EAAQ,WAAAlD,OAAUgF,EAAO,qBAAAhF,OAAoBiD,EAAO,mBAAAyC,EAAAvB,OAAA,SAC3DhB,EAAWQ,IAAI,wBAAA+B,EAAAnB,OAAA,GAAAkB,EAAA,MACrBnC,MAAA,KAAAC,UAAA,CAGM,SAAeoC,EAAeC,GAAA,OAAAC,EAAAvC,MAAA,KAAAC,UAAA,CAGpC,SAAAsC,IAAA,OAAAA,GAAArC,EAAAA,EAAAA,GAAAC,IAAAA,MAHM,SAAAqC,EAAgCd,GAAO,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAAsC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OACoB,OAA7DJ,EAAG,GAAA3D,OAAMkD,EAAQ,WAAAlD,OAAUgF,EAAO,qBAAAhF,OAAoBiD,EAAO,0BAAA8C,EAAA5B,OAAA,SAC3DhB,EAAWQ,IAAI,wBAAAoC,EAAAxB,OAAA,GAAAuB,EAAA,MACrBxC,MAAA,KAAAC,UAAA,C","sources":["components/MovieList.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searshbar.js","pages/MoviesPage.js","servises/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst List = styled.ol`\n  margin-bottom: 10px;\n`;\n\nconst Item = styled.li`\n  padding-left: 20px;\n  font-size: 16px;\n  color: #fff;\n  font-weight: 300;\n  letter-spacing: 1.2;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  &:hover,\n  &:focus,\n  &.active {\n    color: #e38282;\n  }\n`;\n\nconst LinkTo = styled(Link)`\n  font-size: 16px;\n  color: #fff;\n  font-weight: 300;\n  letter-spacing: 1.2;\n\n  &:visited {\n    color: #707070;\n  }\n\n  &:hover,\n  &:focus,\n  &.active {\n    color: #e38282;\n  }\n`;\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <LinkTo to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </LinkTo>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n\n  max-width: 700px;\n  background-color: white;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 0.5px solid black;\n  &:hover {\n    border-color: #707070;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  display: inline-block;\n  width: 80px;\n  height: 50px;\n  border: 0;\n  cursor: pointer;\n  background-color: #e38282;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: #d66d6d;\n  }\n`;\n\nexport const SearchIcon = styled.div`\n  width: 2.3em;\n  height: 1.3em;\n  color: #fff;\n  display: inline-block;\n`;\n\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: none;\n  outline: none;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n    color: #707070;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Form, FormBtn, SearchIcon, FormInput } from './Searchbar.styled';\n\nimport { FaSearch } from 'react-icons/fa';\n\nconst Searchbar = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(event.target.query.value);\n    event.target.reset();\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies...\"\n          name=\"query\"\n        />\n        <FormBtn type=\"submit\">\n          <SearchIcon>\n            <FaSearch />\n          </SearchIcon>\n        </FormBtn>\n      </Form>\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getMoviesByQuery } from '../servises/api';\n\nimport Container from '../components/Container';\nimport Searchbar from '../components/Searchbar/Searshbar';\nimport MovieList from '../components/MovieList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const navigation = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const query = new URLSearchParams(location.search).get('query') ?? '';\n\n  //при сабмите формы поиска\n  const HandleSubmit = request => {\n    navigation({ ...location, search: `query=${request}` });\n  };\n  //при изменении запроса в форме поиска фильмов\n  useEffect(() => {\n    if (!query) return;\n    setIsLoading(true);\n    getMoviesByQuery(query).then(resp => {\n      setMovies(resp.results);\n      setIsLoading(false);\n    });\n  }, [query]);\n\n  return (\n    <Container>\n      <Searchbar onSubmit={HandleSubmit} />\n      {isLoading ? <p>...Loading</p> : <MovieList movies={movies} />}\n    </Container>\n  );\n};\n\nexport default MoviesPage;\n","const API_KEY = \"d37f6a23bd7ef44f9836a4799b5199b5\";\nconst BASE_URL = 'https://api.themoviedb.org/3';\n \nasync function ApiService(URL) {\n  try {\n    let responce = await fetch(URL);\n    return await responce.json();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n export async function getDayTrandingMovies() {\n    const URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n  return ApiService(URL);\n  };\n\n \n export async function  getMovieById (movieId) {\n     const URL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  return ApiService(URL);\n  };\n\n\n  export async function getMoviesByQuery (query) {\n    const URL = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1`;\n  return ApiService(URL);\n\n  };\n\n\n export async function getMovieCredits ( movieId ) {\n const URL = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  return ApiService(URL);\n  };\n\n \n  export async function getMovieReviews (movieId) {\n const URL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  return ApiService(URL);\n  };"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","LinkTo","Link","_templateObject3","_ref","movies","location","useLocation","_jsx","children","map","movie","to","concat","id","state","from","title","Form","FormBtn","SearchIcon","FormInput","_templateObject4","onSubmit","_jsxs","event","preventDefault","target","query","value","reset","type","autoComplete","autoFocus","placeholder","name","FaSearch","_URLSearchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","navigation","useNavigate","_useState3","_useState4","isLoading","setIsLoading","URLSearchParams","search","get","useEffect","getMoviesByQuery","then","resp","results","Container","Searchbar","request","_objectSpread","MovieList","API_KEY","BASE_URL","ApiService","_x","_ApiService","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","URL","responce","_context","prev","next","fetch","sent","json","abrupt","t0","console","log","stop","getDayTrandingMovies","_getDayTrandingMovies","_callee2","_context2","getMovieById","_x2","_getMovieById","_callee3","movieId","_context3","_x3","_getMoviesByQuery","_callee4","_context4","getMovieCredits","_x4","_getMovieCredits","_callee5","_context5","getMovieReviews","_x5","_getMovieReviews","_callee6","_context6"],"sourceRoot":""}